{"timestamp": 1681098624.77345, "stored_source_code": "# declare a list tasks whose products you want to use as inputs\nupstream = None\n\nimport joblib\nimport os\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndef plot_characteristics(high_priority_customers):\n\n    \"\"\"\n\n    This function plots the characteristics of high priority customers.\n\n    Args:\n        high_priority_customers (pandas.DataFrame): DataFrame containing the characteristics of high priority customers\n\n    \"\"\"\n\n    fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(16, 10))\n    fig.suptitle('High Priority Customer Characteristics', fontsize=16, y=1.03)\n    # Job\n    sns.countplot(x='job', data=high_priority_customers, ax=axes[0, 0], order=high_priority_customers['job'].value_counts().index)\n    axes[0, 0].set_title('Job type')\n    axes[0, 0].tick_params(axis='x', rotation=90)\n\n    # Education\n    sns.countplot(x='education', data=high_priority_customers, ax=axes[0, 1])\n    axes[0, 1].set_title('Education level')\n    axes[0, 1].tick_params(axis='x', rotation=90)\n\n    # Marital\n    sns.countplot(x='marital', data=high_priority_customers, ax=axes[0, 2], order=high_priority_customers['marital'].value_counts().index)\n    axes[0, 2].set_title('Marital status')\n    axes[0, 2].tick_params(axis='x', rotation=90)\n\n    # Default\n    sns.countplot(x='default', data=high_priority_customers, ax=axes[1, 0], order=high_priority_customers['default'].value_counts().index)\n    axes[1, 0].set_title('Default status')\n    axes[1, 0].tick_params(axis='x', rotation=90)\n\n    # Housing\n    sns.countplot(x='housing', data=high_priority_customers, ax=axes[1, 1], order=high_priority_customers['housing'].value_counts().index)\n    axes[1, 1].set_title('Housing loan')\n    axes[1, 1].tick_params(axis='x', rotation=90)\n\n    # Loan\n    sns.countplot(x='loan', data=high_priority_customers, ax=axes[1, 2], order=high_priority_customers['loan'].value_counts().index)\n    axes[1, 2].set_title('Loan status')\n    axes[1, 2].tick_params(axis='x', rotation=90)\n\n    plt.tight_layout()\n\n    # Save the plot\n    plt.savefig(os.path.abspath(os.path.join(os.getcwd(),  'reports', 'figures', 'customer-segmentation.png')), bbox_inches='tight')\nif __name__ == \"__main__\":\n\n\n     # Set the path to the trained model\n    model_path = os.path.abspath(os.path.join(os.getcwd(),  'models', 'pipeline.joblib'))\n\n     # Load the trained model\n    pipeline = joblib.load(model_path)\n\n    # Set the path to the CSV file\n    csv_path = os.path.abspath(os.path.join(os.getcwd(), 'data', 'raw', 'term-deposit-marketing-2020.csv'))\n\n    # Load the data\n    data = pd.read_csv(csv_path)\n\n    # Prepare target variable\n    data['y'] = data['y'].apply(lambda x: 1 if x == 'yes' else 0)\n\n    # Define feature columns and target column\n    X = data.drop(columns=['y','month','day','contact'])\n    y = data['y']\n\n    # For a new customer\n    new_customer_data = X  \n    y_pred = pipeline.predict(new_customer_data)\n\n    # Estimate probabilities\n    probabilities = pipeline.predict_proba(new_customer_data)\n\n    # Set a threshold for prioritizing customers\n    threshold = 0.7\n\n    # Find customers with a higher probability of subscribing\n    high_priority_customers = new_customer_data[probabilities[:, 1] >= threshold]\n\n    # Plot the characteristics of high priority customers\n    plot_characteristics(high_priority_customers)\n\n    \n    ", "params": {}}